stages:
  - build
  - test
  - deploy
  - dast

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Jobs/Code-Quality.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: DAST.gitlab-ci.yml

# code_quality:
#   stage: test
#   tags:
#     - aktest
#   artifacts:
#     paths: [gl-code-quality-report.json] 
#     expire_in: never 

code_quality:
  stage: test
  image: docker:stable
  tags:
    - aktest
  artifacts:
    paths:
      - gl-code-quality-report.json
    reports:
      codequality: gl-code-quality-report.json
    expire_in: never

code_quality_html:
  extends: code_quality
  variables:
    REPORT_FORMAT: html
  artifacts:
    paths: [gl-code-quality-report.html]

  
build-code:
  stage: build
  image: maven
  # only:
  # - main
  tags:
  - aktest
  # before_script:
  # - echo "=======change permission ======="
  # - chmod +x maveninstall.sh
  script:
  - echo "==== Project Building Started ====="
  # - "./maveninstall.sh"
  - mvn clean install
  - echo "code build Successfull..."
  - pwd
  - ls
  when: on_success
  artifacts:
    paths:
    - target/*.war
    expire_in: 15 days

sast:
  stage: test
  tags:
    - aktest
  artifacts:
   name: sast
   paths:
     - gl-sast-report.json
   reports:
     sast: gl-sast-report.json
   when: always
  script:
    - echo "testing the SAST job"



license_scanning:
  stage: test
  tags:
    - aktest
  dependencies: []
  rules:
    - if: $LICENSE_MANAGEMENT_DISABLED
      when: never
    - if: $CI_COMMIT_BRANCH &&
          $GITLAB_FEATURES =~ /\blicense_scanning\b/
  artifacts:
    paths:
      - gl-license-scanning-report.json 
    expire_in: never    


gemnasium-maven-dependency_scanning:
  extends:
    - .ds-analyzer
    - .cyclonedx-reports
  variables:
    DS_ANALYZER_NAME: "gemnasium-maven"
  stage: test
  tags:
    - aktest
  artifacts:
    paths:
     - gl-sbom-*.cdx.json
     - gl-dependency-scanning-report.json
    expire_in: never 


deploy:
  stage: deploy
  tags:
  # - tomcat-shell
    - portalshell
  script:
#    - cp path/to/your/war/file.war /path/to/tomcat/webapps/
    - sudo cp -r target/*.war /opt/apache-tomcat-9.0.78/webapps
#     - /path/to/tomcat/bin/startup.sh
 #   - /home/fs-ankita/apache-tomcat-9.0.78/bin

dast:
  stage: dast
  tags :
    - aktest
  image:
    name: "$SECURE_ANALYZERS_PREFIX/dast:$DAST_VERSION$DAST_IMAGE_SUFFIX"
  # variables:
  #   GIT_STRATEGY: none
  # # allow_failure: true
  artifacts:
    paths:
     - gl-dast-report.json




  
  
