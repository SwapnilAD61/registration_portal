# workflow:
#   rules:
#   - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
#     when: never
#   - when: always

image: maven:3.8.6-jdk-11



stages:
- build
- test
- deploy

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml 
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
# - template: Security/Coverage-Fuzzing.gitlab-ci.yml


build-code:
  stage: build
  # only:
  # - main
  tags:
  - aktest
  before_script:
  - echo "=======change permission ======="
  - chmod +x maveninstall.sh
  script:
  - echo "==== Project Building Started ====="
  - "./maveninstall.sh"
  - echo "code build Successfull..."
  - pwd
  when: on_success
  artifacts:
    paths:
    - target/*.war
    expire_in: 15 days

sast:
  stage: test
  tags:
    - aktest
  artifacts:
   name: sast
   paths:
     - gl-sast-report.json
   reports:
     sast: gl-sast-report.json
   when: always
  script:
    - echo "testing the SAST job"

license_scanning:
  stage: test
  tags:
      - aktest
  dependencies: []
  rules:
    - if: $LICENSE_MANAGEMENT_DISABLED
      when: never
    - if: $CI_COMMIT_BRANCH &&
          $GITLAB_FEATURES =~ /\blicense_scanning\b/
  artifacts:
    paths:
      - gl-license-scanning-report.json 
    expire_in: never    

code_quality:
  stage: test
  tags:
    - aktest  
  artifacts:
    paths: [gl-code-quality-report.json] 
    expire_in: never  



gemnasium-dependency_scanning:
  variables:
    DS_MAX_DEPTH: 5
    DS_ANALYZER_NAME: "gemnasium"
    GEMNASIUM_LIBRARY_SCAN_ENABLED: "true"
  stage: test
  tags:
    - aktest
  artifacts:
    name: dependency-scanning
    paths:
      - gl-dependency-scanning.json
      - retire-jsrepository.json
      - sbom-manifest.json
    expire_in: never  
    #   dependency-scanning: gl-sbom-*.cdx.json
    # when: always
# variables:
#   IMAGE: registry.gitlab.com/fineshift/java_deploy:latest
#   DOCKERFILE_PATH: "$CI_PROJECT_DIR/Dockerfile"


deploy-code:
  stage: deploy
  tags:
    - portalshell
  script:
#    - cp path/to/your/war/file.war /path/to/tomcat/webapps/
    - cp target/*.war /home/fs-ankita/apache-tomcat-9.0.78/webapps
#     - /path/to/tomcat/bin/startup.sh
 #   - /home/fs-ankita/apache-tomcat-9.0.78/bin






  
  
